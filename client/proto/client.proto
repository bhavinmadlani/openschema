// Copyright (c) 2020-present, Shoelace Wireless, Inc.
// All rights reserved.
//
// This source code is licensed under the BSD-style license found in the
// LICENSE file in the root directory of this source tree.

syntax = "proto3";

package openschema.schema.client;


enum WiFiStandard {
  legacy = 1;
  11n = 2;
  11ac = 3;
  11ax = 4;
  others = 5
}

//Wifi Usage Metrics
message WifiUsageHourly {
  int64 value = 1;
  string date = 2;
}

message WifiUsageDaily {
  int64 value = 1;
  string date = 2;
}

//Cellular Usage Metrics
message CellularUsageHourly {
  int64 value = 1;
  string date = 2;
}

message CellularUsageDaily {
  int64 value = 1;
  string date = 2;
}

// WiFi QoS Metrics
message WifiRssi {
  string ssid = 1;
  int32 rssi = 2
  int64 timestamp = 3;
}

message WifiLatency {
  string ssid = 1;
  int32 latency = 2
  int64 timestamp = 3;
}

message WifiJitter {
  string ssid = 1;
  int32 jitter = 2
  int64 timestamp = 3;
}

message WifiBandwidthUp {
  string ssid = 1;
  int32 bandwidth = 2
  int64 timestamp = 3;
}

message WifiBandwidthDown {
  string ssid = 1;
  int32 bandwidth = 2
  int64 timestamp = 3;
}

message WifiPacketLoss { // measured packet loss in %
  string ssid = 1;
  int32 packetloss = 2
  int64 timestamp = 3;
}

message WifiEvent {
  string ssid = 1;
  string bssid = 2;
  bool connected = 3;
  int64 timestamp = 4;
  string security = 5;
  int32 freq = 6;
  int32 linkspeed = 7;
  WiFiStandard standard = 8;
  string ipv4 = 9;
  string ipv6 = 10;
  string public_ipv4 = 11;
  string public_ipv6 = 12;
  bool hidden = 13;
}

message WifiAp {
  string ssid = 1;
  string bssid = 2;
  int32 rssi = 3;
  string operator = 4;
  string venue = 5;
  WiFiStandard standard = 6;
}

message WifiScanResult {
  string timestamp = 1;
  repeat WifiAp = 2;
}

// Cellular QoS Metrics
message CellularSignalStrength { //TODO: breakdown to different technologies
  string net = 1;
  int32 rssi = 2
  int64 timestamp = 3;
}

message CellularLatency {
  string net = 1;
  int32 latency = 2
  int64 timestamp = 3;
}

message CellularJitter {
  string net = 1;
  int32 jitter = 2
  int64 timestamp = 3;
}

message CellularBandwidthUp {
  string net = 1;
  int32 BandWidth = 2
  int64 timestamp = 3;
}

message CellularBandwidthDown {
  string net = 1;
  int32 BandWidth = 2
  int64 timestamp = 3;
}

message CellularPacketLoss { // measured packet loss in %
  string net = 1;
  int32 packetloss = 2
  int64 timestamp = 3;
}

message CellularPlan {
  string net = 1;
  int32 size = 2; // monthly plan size in GB
}

// Device events
enum DeviceEventType {
  cpu = 0;
  mem = 1;
  battery = 2;
}

message DeviceEvent {
  DeviceEventType type = 1;
  int32 value = 2;
}

// Device Specifications
message Device {
  string model = 1;
  string os = 2;
  string model = 3;
}

// User Behavior
message ScreenEvent { // screen on and off duration
  bool status = 1;
  int32 duration = 2;
  int64 timestamp = 3;
}

//Location
message DeviceLocation {
  double long = 1;
  double lat = 2;
  int64 timestamp = 3;
}

//App Usage
message AppUsageDaily {
  string appid = 1;
  int64 value = 2;
  string date = 3;
}

enum HetNetMode {
  eco = 1;
  smart = 2;
  dual = 3;
  wifiplus = 4;
  abc = 5;
}

message HetNet {
  HetNetMode mode = 1;
  int64 starttime = 2;
  int64 endtime = 3
  HetNetMode pre_mode = 4;
  HetNetMode new_mode = 5;
  int32 wifi_offload = 6;
  int32 spped_boosts = 7;
  int32 seamless_transition = 8;
  int32 wifi_efficiency = 9;
  repeat string dns_server = 10;
  bool enc = 11;
}
